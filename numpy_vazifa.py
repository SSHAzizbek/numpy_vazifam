# -*- coding: utf-8 -*-
"""Numpy_vazifa

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TMmwiNVqb5xEfqa9cxhCN-SK0vF63REl

# NumPy kutubxonasiga doir bilimlaringizni mustaxkamlash uchun mashqlar

Hurmatli o'quvchi, bilimingizni yanada mustaxkamlashingiz va chuqurroq ko'nikmalarga ega bo'lishingiz uchun sizga topshiriqlar tayyorladik. Sizga yengillik yaratish maqsadida topshiriqni aynan qanday funksiyalar yordamida amalga oshirishingiz mumkin ekanini
 `ðŸ’¡Ishora` ko'rinishida yozdik!
"""

from google.colab import drive
drive.mount('/content/drive')

"""#### 1. NumPy kutubxonasini `np` nomi ostida yuklang va numpy kutubxonasini chop eting.

versiya va konfiguratsiyani tekshiring.

`ðŸ’¡Ishora` import â€¦ as` and `np.__version__, np.show_config
"""

import numpy as np
np.__version__
np.show_config()

"""#### 2. Raqamli qiymatlar ro'yxatini bir o'lchovli NumPy massiviga aylantiring!

`ðŸ’¡Ishora` numpy.array
"""

a=[1,2,3,4,5,6,7,8]
arr2=np.array(a)
arr2

"""#### 3. Qiymatlari noldan iborat bo'lgan to'qqiz o'lchovli massiv yarating.

`ðŸ’¡Ishora` np.zeros
"""

arr3=np.zeros(9)
arr3

"""#### 4. Massiv yarating va uning xotira hajmini toping.

`ðŸ’¡Ishora` size, itemsize
"""

arr4=np.size(arr3)
arr4

"""#### 5. NumPy kutubxonasidagi add funksiyasi hujjatlarini buyruq satridan qanday olishi mumkin?

`ðŸ’¡Ishora` np.info
"""

arr5=np.info(arr3)

"""#### 6. Shunday vekor yaratingki u o'n ikki o'lchamda va qiymatlari noldan iborat bo'lsin, lekin vektorning oltinchi qiymati 1 ga teng bo'lsin.

`ðŸ’¡Ishora` array[12]
"""

arr6=np.zeros(12)
arr6[6]=1
arr6

"""#### 7. Qiymatlari 20 dan 59 gacha bo'lgan vektor yarating.

`ðŸ’¡Ishora` arange
"""

arr7=np.arange(20,59)
arr7

"""#### 8. Vektor yarating va uni teskari o'zgartiring
(birinchi element oxirgisi bo'lsin)

`ðŸ’¡Ishora` array[::-1]
"""

arr8=-np.sort(-arr7)
arr8

"""#### 9. 12 dan 20 gacha bo'lgan qiymatlarga ega 3x3 matritsa yarating.

`ðŸ’¡Ishora` reshape
"""

arr9=np.arange(12,21).reshape(3,3)
arr9

"""#### 10. Quyidagi matritsadan foydalanib nolga teng bo'lmagan elementlarning indekslarini toping.
[3, 7, 0, 0, 9, 0]

`ðŸ’¡Ishora` np.nonzero
"""

ber=[3, 7, 0, 0, 9, 0]
arr10=np.nonzero(ber)
arr10

"""#### 11. Tasodifiy qiymatlar bilan 2x2x2 o'lchovidagi massiv yarating.

"""



"""`ðŸ’¡Ishora` np.random.random"""

arr11=np.random.randn(2,2,2)
arr11

"""#### 12. Tasodifiy sonlardan tashkil topgan 9X9 o'lchamidagi massiv yarating. So'ng uning eng katta va eng kichik qiymatlarini toping

`ðŸ’¡Ishora` min, max
"""

arr12=np.random.randn(9,9)
print(np.min(arr12))
print(np.max(arr12))

"""#### 13. Quyidagi misol qanday natija beradi?


```python
0 * np.nan
np.nan == np.nan
np.inf > np.nan
np.nan - np.nan
np.nan in set([np.nan])
0.7 == 7 * 0.1
```

`ðŸ’¡Ishora` NaN = not a number, inf = infinity
"""

False

"""#### 14. O'lchamlari 6x3 va 3x4 bo'lgan martitsa yarating, so'ng ularning  ko'paytmasini hisoblang.

`ðŸ’¡Ishora` np.dot` or `np.ones
"""

arr14 = np.random.rand(6, 3)
arr14_1 = np.random.rand(3, 4)
data14 = np.dot(arr14, arr14_1)
print(data14)

"""#### 15. Quyidagi misol qanday natija beradi?

```python
print(sum(range(5),-1))
from numpy import *
print(sum(range(5),-1))
```
"""

10

"""#### 16. NumPy kutubxonasi yordamida ikkita massivni solishtiring va ular usida quyidagi amallarni bajaring.

```python
Array a: [1 2]
Array b: [4 5]
a > b
[False False]
a >= b
[False False]
a < b
[ True True]
a <= b
[ True True]
```
"""

a = np.array([1, 2])
b = np.array([4, 5])
print(a > b)
print(a >= b)
print(a < b)
print(a <= b)
c = a + b
d = a * b
e = a / b

print(c)
print(d)
print(e)

"""#### 17. Quyidagi misol qanday natija beradi?

```python
np.array(0) / np.array(0)
np.array(0) // np.array(0)
np.array([np.nan]).astype(int).astype(float)
```
"""

# nan qiymatga olib keladi. sababi 0 ni 0ga bo'lib bo'lmaydi

"""#### 18. Ikkita massiv yarating va ular orasidagi umumiy qiymatlarni toping

`ðŸ’¡Ishora` np.intersect1d
"""

a1=np.array([1,2,3,4,5,7,9])
a2=([1,3,5,9,10,15,])
arr18=np.intersect1d(a1,a2)
arr18

"""#### 19. Tasodifiy sonlardan iborat bo'lgan massiv yarating, so'ng ularni quyida berilgan 4 xil usul yordamida musbat sonlarning butun qismini ajratib oling.

`ðŸ’¡Ishora` %, np.floor, astype, np.trunc
"""

arr19=np.arange(2.4,3.2,0.1)
data19=np.floor(arr19)
print("Butun: ",data19)

"""#### 20. O'lchovlari 3x3 matritsa yarating, ularning qator qiymatlari 0 dan 2 gacha bo'lsin.

`ðŸ’¡Ishora` np.arange
"""

arr20=np.array([[0, 1, 2], [1, 0, 2], [2, 1, 0]])
arr20

"""#### 21. O'chamlari 10 bo'lgan tasodifiy vektor yarating va uni o'sish tartibida chiqaruvchi dastur tuzing.

`ðŸ’¡Ishora` sort
"""

arr21=np.random.rand(10)
data21=np.sort(arr21)
data21

"""#### 22. Ikki tasodifiy A va B massiv yarating, ularning tengligini tekshiring

`ðŸ’¡Ishora` np.allclose, np.array_equal
"""

A=np.random.rand(5)
B=np.random.rand(5)
print(np.array_equal(A, B))
print(np.allclose(A, B))

"""#### 23. O'lchamlari 6x3 va 3x4 matritsa tuzing va ularni o'zaro ko'paytiring.

`ðŸ’¡Ishora` np.dot or np.ones
"""

arr23 = np.random.rand(6, 3)
arr23_1 = np.random.rand(3, 4)
data23 = np.dot(arr23, arr23_1)
print(data23)

"""#### 24. Tasodifiy sonlardan iborat bo'lgan o'lchami 5 ga teng vektor yarating, so'ng uning eng katta qiymatini 0 ga o'zgartiring.

`ðŸ’¡Ishora` argmax
"""

arr24=np.random.rand(5)
maks24=np.argmax(arr24)
maks24=0



arr24

"""#### 25. NumPy kutubxonasi yordamida kecha, bugun va ertangi kun sanalarini aniqlang.

`ðŸ’¡Ishora` np.datetime64, np.timedelta64
"""

import numpy as np
today = np.datetime64('today', 'D')
yesterday = today - np.timedelta64(1, 'D')
tomorrow = today + np.timedelta64(1, 'D')

print("Yesterday's date:", yesterday)
print("Today's date:", today)
print("Tomorrow's date:", tomorrow)

"""#### 26. 2016 yil yanvar oyiga to'g'ri keladigan barcha sanalarni NumPy kutubxonasi yordamida aniqlang.

`ðŸ’¡Ishora` np.arange(dtype=datetime64['D'])
"""

import numpy as np
jan_2016 = np.arange('2016-01', '2016-02', dtype='datetime64[D]')
jan_2016 = jan_2016[jan_2016.astype('datetime64[M]') == np.datetime64('2016-01')]

print("All dates in January 2016:")
print(jan_2016)

"""#### 27. 4 xil usul yordamida musbat sonlarning tasodifiy massivining butun son qismini ajratib oling.

`ðŸ’¡Ishora` %, np.floor, astype, np.trunc`
"""

arr19=np.arange(2.4,3.2,0.1)
data19=np.floor(arr19)
print("Butun: ",data19)

"""#### 28. Ixtiyoriy kichik massivlar yarating, ular yeg'indisini np.sum funksiyasidanda tezroq hisoblovchi dastur tuzing.

`ðŸ’¡Ishora` np.add.reduce
"""

arr28=np.array([1,2,3,4,5,6])
summa=np.add.reduce(arr28)
summa

"""#### 29. [1, 2, 3, 4, 5] vektor berilgan, har bir qiymat orasiga ketma-ket 3 ta nol raqamini yozuvchi dastur tuzing.

`ðŸ’¡Ishora` array[::4]
"""

berilgan = [1, 2, 3, 4, 5]
yangi = []

for num in berilgan:
    yangi.append(num)
    yangi.extend([0, 0, 0])
yangi = yangi[:-3]

print(yangi)

"""#### 30. Quyidagi a massiv berilgan, a = [1,2,3,4,5,6,7,8,9,10,11,12,13,14] undan foydalangan holda siz quyidagi b massivni yarata olasizmi, b = [[1,2,3,4], [2,3,4,5], [3,4,5,6], ..., [11,12,13,14]]?

`ðŸ’¡Ishora` stride_tricks.as_strided
"""

a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
b = [a[i:i+4]
for i in range(len(a)-3)]
#chat GPT dan yordam oldim!!!
print(b)

"""#### 31. Ixtiyoriy sonlardan tashkil topgan massiv yarating, unga o'xshash qiymatlar kiriting. So'ng, o'xshash qiymatlarni topuvchi dastur tuzing.

`ðŸ’¡Ishora` np.bincount, argmax
"""

arr31=np.array([1,2,4,5,7,9,1,2,8,4,3,1,4,2,9,7,3,1,5])
data31=np.bincount(arr31)
data31



"""#### BONUS!

`ðŸ’¡O'zingiz javob berishni istagan savolni kiriting va unga javob bering!`
"""

#Rahmat